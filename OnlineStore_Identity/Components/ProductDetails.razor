@* you should put these 2 using 
    as well as the script that is put under the component tag in the partial view or view holding the component
    as well as the the service and endpoints added in the Startup.cs
    to make the event firing work *@
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;

@using OnlineStore_Identity.ViewModels;

<div class="container">
    <!--Section: Block Content-->
    <section class="mb-5">

        <div class="row">
            <div class="col-md-6 mb-4 mb-md-0">

                @*<div id="mdb-lightbox-ui"></div>*@

                @*<div class="mdb-lightbox">*@

                <div class="row mx-1">

                    <div class="col-12 mb-0">
                        <figure class="view overlay rounded z-depth-1 main-img">
                            <a href="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/15a.jpg"
                               data-size="710x823">
                                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/15a.jpg"
                                     class="img-fluid z-depth-1">
                            </a>
                        </figure>
                        <figure class="view overlay rounded z-depth-1 hide">
                            <a href="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12a.jpg"
                               data-size="710x823">
                                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12a.jpg"
                                     class="img-fluid z-depth-1">
                            </a>
                        </figure>
                        <figure class="view overlay rounded z-depth-1 hide">
                            <a href="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/13a.jpg"
                               data-size="710x823">
                                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/13a.jpg"
                                     class="img-fluid z-depth-1">
                            </a>
                        </figure>
                        <figure class="view overlay rounded z-depth-1 hide">
                            <a href="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/14a.jpg"
                               data-size="710x823">
                                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/14a.jpg"
                                     class="img-fluid z-depth-1">
                            </a>
                        </figure>
                    </div>
                    <div class="col-12">
                        <div class="row">
                            <div class="col-3">
                                <div class="view overlay rounded z-depth-1 gallery-item">
                                    <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12a.jpg"
                                         class="img-fluid">
                                    <div class="mask rgba-white-slight"></div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="view overlay rounded z-depth-1 gallery-item">
                                    <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/13a.jpg"
                                         class="img-fluid">
                                    <div class="mask rgba-white-slight"></div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="view overlay rounded z-depth-1 gallery-item">
                                    <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/14a.jpg"
                                         class="img-fluid">
                                    <div class="mask rgba-white-slight"></div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="view overlay rounded z-depth-1 gallery-item">
                                    <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/15a.jpg"
                                         class="img-fluid">
                                    <div class="mask rgba-white-slight"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*</div>*@

            </div>
            <div class="col-md-6">

                <h5>@Product.productName</h5>
                <p class="mb-2 text-muted text-uppercase small">@Product.Category.categoryName / @Product.Class.className</p>
                <ul class="list-unstyled d-inline-flex">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= rate)
                        {
                            <li>
                                <i class="fas fa-star fa-sm text-primary"></i>
                            </li>
                        }
                        else
                        {
                            <li>
                                <i class="far fa-star fa-sm text-primary"></i>
                            </li>
                        }
                    }

                </ul>
                <span>@Product.Reviews.Count reviews</span>
                <p><span class="mr-3"><strong>@Product.productPrice</strong></span><span class="px-3 badge-danger"><strong>@Product.productDiscount%</strong></span></p>
                <p class="pt-1">
                    @*Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam, sapiente illo. Sit
                        error voluptas repellat rerum quidem, soluta enim perferendis voluptates laboriosam. Distinctio,
                        officia quis dolore quos sapiente tempore alias.*@
                    @Product.productDescription
                </p>
                <div class="table-responsive">
                    <table class="table table-sm table-borderless mb-0">
                        <tbody>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Brand</strong></th>
                                <td>@Product.productBrand</td>
                            </tr>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Material</strong></th>
                                <td>@Product.productMaterial</td>
                            </tr>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Size</strong></th>
                                <td>
                                    <div class="form-group">

                                        <select @onchange="SizeChange" class="form-select w-50">
                                            <option></option>
                                            @* to select distinct size *@
                                            @foreach (var item in Product.Stores.Select(s => s.productSize).GroupBy(s => s).Select(s => s.First()).ToList())
                                            {
                                                <option value="@item">@item</option>
                                            }
                                        </select>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <hr>
                <div class="table-responsive mb-2">
                    <table class="table table-sm table-borderless">
                        <tbody>
                            <tr>
                                <td class="pl-0 pb-0">Quantity</td>
                                <td class="pb-0">Select size</td>
                            </tr>
                            <tr>
                                <td class="pl-0">
                                    @if (!string.IsNullOrEmpty(Size))
                                    {

                                        <div class="def-number-input number-input safari_only mb-0">
                                            <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()"
                                                    class="btn">
                                                +
                                            </button>
                                            <input class="max-width-100 form-control" disabled min="0" max="@Max" name="quantity" value="@qunantity" type="number">
                                            <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"
                                                    class="btn">
                                                -
                                            </button>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <div class="mt-1">
                                        <select @onchange="ColorChange" class="form-select w-50">
                                                <option selected="@newSize"></option>
                                                @foreach (var item in Colors)
                                                {
                                                    <option value="@item">@item</option>
                                                }
                                            </select>
                                        @*<div class="form-check form-check pl-0">
                                                <input type="radio" class="form-check-input" id="small" name="materialExampleRadios"
                                                        checked>
                                                <label class="form-check-label small text-uppercase card-link-secondary"
                                                        for="small">Small</label>
                                            </div>
                                            <div class="form-check form-check pl-0">
                                                <input type="radio" class="form-check-input" id="medium" name="materialExampleRadios">
                                                <label class="form-check-label small text-uppercase card-link-secondary"
                                                        for="medium">Medium</label>
                                            </div>
                                            <div class="form-check form-check pl-0">
                                                <input type="radio" class="form-check-input" id="large" name="materialExampleRadios">
                                                <label class="form-check-label small text-uppercase card-link-secondary"
                                                        for="large">Large</label>
                                            </div>*@
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <button type="button" class="btn btn-primary btn-md mr-1 mb-2">Buy now</button>
                <button type="button" class="btn btn-light btn-md mr-1 mb-2">
                    <i class="fas fa-shopping-cart pr-2"></i>Add to cart
                </button>
            </div>
        </div>

    </section>
    <!--Section: Block Content-->

</div>

@code {
    [Parameter] public HomeProductDetailsVM Product { get; set; }

    [Parameter] public int rate { get; set; }

    public string Size { get; set; }

    public List<string> Colors { get; set; } = new List<string>();

    public int Max { get; set; } = 0;

    public int qunantity { get; set; } = 1;

    public bool newSize { get; set; } = true;

    public void SizeChange(ChangeEventArgs args)
    {
        Size = args.Value as string;

        newSize = true;

        Colors = Product.Stores.Where(s => s.productSize == Size).Select(s => s.productColor).ToList();
    }

    public void ColorChange(ChangeEventArgs args)
    {
        var color = args.Value as string;

        newSize = false;

        Max = Product.Stores.Where(s =>  s.productColor == color && s.productSize == Size).Select(s => s.productQuantity).FirstOrDefault() ?? 0;
    }
}
